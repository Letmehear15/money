{"version":3,"sources":["utils/localStorage.ts","dayInfo/MoneyTillPayday.tsx","dayInfo/SpentMoneyPerDay.tsx","dayInfo/DayInfo.tsx","setupComponents/DatePicker.tsx","setupComponents/Money.tsx","setupComponents/SetupComponents.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["getMoneyFromLocalstorage","money","localStorage","getItem","Number","saveMoneyToLocalstorage","setItem","String","getPaydayDate","payday","Date","MoneyTillPayday","moneyTillPayday","daysTillPayday","Box","display","flexDirection","Typography","align","variant","marginTop","SpentMoneyPerDay","setSpentMoney","spentMoney","onApplyMoney","marginBottom","TextField","label","type","onChange","e","value","target","inputProps","inputMode","pattern","Button","style","size","endIcon","onClick","disabled","Boolean","dateDiffInDays","a","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","calcMoneyPerDay","todayDate","payDate","moneyTillpayday","diffInDays","DayInfo","React","useState","setMoneyTillPayday","getDaysTillPayday","useEffect","undefined","PickerPayloadDate","setPayday","date","okText","cancelText","clearable","disableHighlightToday","renderInput","params","fullWidth","required","Money","setMoney","SetupComponents","setIsSetup","margin","color","useStyles","makeStyles","root","width","height","padding","paddingTop","App","classes","isSetup","initApp","setInitApp","Paper","square","className","alignItems","removeItem","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","theme","createTheme","palette","mode","ReactDOM","render","StyledEngineProvider","injectFirst","ThemeProvider","LocalizationProvider","dateAdapter","AdapterDateFns","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7ef311a8.chunk.js","sourcesContent":["export const getMoneyFromLocalstorage = () => {\n  const money = localStorage.getItem('money');\n  if (money) {\n    return Number(money);\n  }\n  return null;\n};\n\nexport const saveMoneyToLocalstorage = (money: number | null) => {\n  if (money) {\n    localStorage.setItem('money', String(money));\n    return;\n  }\n  localStorage.setItem('money', '');\n};\n\nexport const getPaydayDate = (): Date | null => {\n  const payday = localStorage.getItem('payday');\n  if (payday) {\n    return new Date(payday);\n  }\n  return null;\n};\n\nexport const savePayDateToLocalstorage = (date: Date | null) => {\n  if (date) {\n    localStorage.setItem('payday', String(date));\n    return;\n  }\n\n  localStorage.setItem('payday', '');\n};\n\n\nexport const removeInfoFromLocalstorage = () => {\n    localStorage.removeItem('money')\n    localStorage.removeItem('payday')\n}","import { Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\n\ntype MoneyTillPaydayProps = {\n  moneyTillPayday: number;\n  daysTillPayday: number;\n};\n\nexport const MoneyTillPayday: React.FC<MoneyTillPaydayProps> = ({\n  moneyTillPayday,\n  daysTillPayday,\n}) => {\n  return (\n    <>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Typography align=\"center\" variant=\"h5\" marginTop={5}>\n          Spend every next day\n        </Typography>\n        <Typography align=\"center\" variant=\"h2\">\n          {moneyTillPayday}\n        </Typography>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Typography align=\"center\" variant=\"h5\" marginTop={5}>\n          Remain days till payday\n        </Typography>\n        <Typography align=\"center\" variant=\"h2\">\n          {daysTillPayday}\n        </Typography>\n      </Box>\n    </>\n  );\n};\n","import { Button, TextField, Typography } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Box } from '@mui/system';\nimport React from 'react';\n\ntype SpentMoneyPerDayProps = {\n  setSpentMoney: (money: number) => void;\n  onApplyMoney: () => void;\n  spentMoney: number | undefined;\n};\n\nexport const SpentMoneyPerDay: React.FC<SpentMoneyPerDayProps> = ({\n  setSpentMoney,\n  spentMoney,\n  onApplyMoney\n}) => {\n  const onSpentMoneyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setSpentMoney(Number(value));\n  };\n  return (\n    <>\n      <Typography marginBottom={1} marginTop={2}>\n        Fill spent money input\n      </Typography>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          label=\"was spent today...\"\n          type=\"number\"\n          onChange={onSpentMoneyChange}\n          value={spentMoney ? spentMoney : ''}\n          inputProps={{\n            inputMode: 'numeric',\n            pattern: '[0-9]*'\n          }}\n        />\n        <Button\n          style={{ marginTop: 20 }}\n          variant=\"contained\"\n          size=\"small\"\n          endIcon={<CheckCircleIcon />}\n          onClick={onApplyMoney}\n          disabled={!Boolean(spentMoney)}\n        >\n          Apply\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  getMoneyFromLocalstorage,\n  getPaydayDate,\n  saveMoneyToLocalstorage,\n} from '../utils/localStorage';\nimport { MoneyTillPayday } from './MoneyTillPayday';\nimport { SpentMoneyPerDay } from './SpentMoneyPerDay';\n\nfunction dateDiffInDays(a: Date, b: Date) {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / (1000 * 3600 * 24));\n}\n\nconst getDaysTillPayday = () => {\n  const todayDate = new Date();\n  const payDate = getPaydayDate();\n  if (todayDate && payDate) {\n    return dateDiffInDays(todayDate, payDate);\n  }\n  return 0;\n};\n\nconst calcMoneyPerDay = () => {\n  const todayDate = new Date();\n  const payDate = getPaydayDate();\n  const moneyTillpayday = getMoneyFromLocalstorage();\n  if (payDate && moneyTillpayday) {\n    const diffInDays = dateDiffInDays(todayDate, payDate);\n    return Math.floor(moneyTillpayday / diffInDays);\n  }\n  return 0;\n};\n\nexport const DayInfo = () => {\n  const [spentMoney, setSpentMoney] = React.useState<number>();\n  const [moneyTillPayday, setMoneyTillPayday] = React.useState<number>();\n\n  const daysTillPayday = getDaysTillPayday();\n\n  const onApplyMoney = () => {\n    const moneyTillpayday = getMoneyFromLocalstorage();\n    if (moneyTillpayday && spentMoney) {\n      const moneyDiff = moneyTillpayday - spentMoney;\n      saveMoneyToLocalstorage(moneyDiff);\n      setMoneyTillPayday(calcMoneyPerDay());\n      setSpentMoney(undefined);\n    }\n  };\n\n  React.useEffect(() => {\n    setMoneyTillPayday(calcMoneyPerDay());\n  }, []);\n\n  if (moneyTillPayday === undefined) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <SpentMoneyPerDay\n        onApplyMoney={onApplyMoney}\n        setSpentMoney={setSpentMoney}\n        spentMoney={spentMoney}\n      />\n      <MoneyTillPayday\n        daysTillPayday={daysTillPayday}\n        moneyTillPayday={moneyTillPayday}\n      />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport TextField from '@mui/material/TextField';\nimport MobileDatePicker from '@mui/lab/DatePicker';\nimport { Typography } from '@mui/material';\n\ntype PickerPayloadDateProps = {\n  payday: Date | null,\n  setPayday: (date: Date | null) => void\n};\n\nexport const PickerPayloadDate: FC<PickerPayloadDateProps> = ({payday, setPayday}) => {\n\n  const onChangePayday = (date: Date | null) => {\n    setPayday(date);\n  };\n\n  return (\n    <>\n      <Typography marginBottom={1}>Select your next payday: </Typography>\n      <MobileDatePicker\n        label=\"Payday\"\n        value={payday}\n        onChange={onChangePayday}\n        okText=\"Select\"\n        cancelText=\"\"\n        clearable\n        disableHighlightToday\n        renderInput={(params) => <TextField fullWidth required {...params} />}\n      />\n    </>\n  );\n};\n","import { TextField, Typography } from '@mui/material';\nimport React from 'react';\n\ntype MoneyProps = {\n  money: number | undefined;\n  setMoney: (number: undefined | number) => void;\n};\n\nexport const Money: React.FC<MoneyProps> = ({ money, setMoney }) => {\n  const onMoneyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setMoney(Number(value));\n  };\n  return (\n    <>\n      <Typography marginBottom={1} marginTop={2}>\n        Fill the money input\n      </Typography>\n      <TextField\n        required\n        onChange={onMoneyChange}\n        value={money ? money : ''}\n        type=\"number\"\n        label=\"Money till payday\"\n        fullWidth\n        inputProps={{\n          inputMode: 'numeric',\n          pattern: '[0-9]*'\n        }}\n      />\n    </>\n  );\n};\n","import { Button } from '@mui/material';\nimport React from 'react';\nimport {\n  saveMoneyToLocalstorage,\n  savePayDateToLocalstorage,\n} from '../utils/localStorage';\nimport { PickerPayloadDate } from './DatePicker';\nimport { Money } from './Money';\n\ntype SetupComponentProps = { \n    setIsSetup: (arg: boolean) => void\n}\n\nexport const SetupComponents: React.FC<SetupComponentProps> = ({setIsSetup}) => {\n  const [money, setMoney] = React.useState<number>();\n  const [payday, setPayday] = React.useState<Date | null>(null);\n\n  const onSurveyStart = () => {\n    if (money && payday) {\n      savePayDateToLocalstorage(payday);\n      saveMoneyToLocalstorage(money);\n      setIsSetup(false)\n    }\n  };\n\n  return (\n    <div>\n      <PickerPayloadDate setPayday={setPayday} payday={payday} />\n      <Money setMoney={setMoney} money={money} />\n      <Button\n        style={{ margin: 'auto', marginTop: 50, display: 'block' }}\n        color=\"primary\"\n        variant=\"outlined\"\n        onClick={onSurveyStart}\n        fullWidth\n      >\n        Go ahead to survive\n      </Button>\n    </div>\n  );\n};\n","import { Button, Paper, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { Box } from '@mui/system';\nimport React, { useState, useEffect } from 'react';\nimport { DayInfo } from './dayInfo/DayInfo';\nimport { SetupComponents } from './setupComponents/SetupComponents';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport {\n  getMoneyFromLocalstorage,\n  getPaydayDate,\n  removeInfoFromLocalstorage,\n} from './utils/localStorage';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100vh',\n    padding: 10,\n    paddingTop: 50,\n  },\n}));\n\nexport const App = () => {\n  const classes = useStyles();\n  const [isSetup, setIsSetup] = useState(false);\n  const [initApp, setInitApp] = useState(false);\n\n  const onResetApp = () => {\n    removeInfoFromLocalstorage();\n    setIsSetup(true);\n  };\n\n  useEffect(() => {\n    if (!Boolean(getPaydayDate()) && !Boolean(getMoneyFromLocalstorage())) {\n      setIsSetup(true);\n    }\n    setInitApp(true);\n  }, []);\n\n  if (!initApp) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  return (\n    <Paper square className={classes.root}>\n      {isSetup ? (\n        <SetupComponents setIsSetup={setIsSetup} />\n      ) : (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <DayInfo />\n          <Button\n            style={{ marginTop: 100 }}\n            endIcon={<RestartAltIcon />}\n            color=\"warning\"\n            variant=\"outlined\"\n            onClick={onResetApp}\n          >\n            Restart app\n          </Button>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport {\n  ThemeProvider,\n  createTheme,\n  StyledEngineProvider,\n} from '@mui/material/styles';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nReactDOM.render(\n  <StyledEngineProvider injectFirst>\n    <ThemeProvider theme={theme}>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <App />\n      </LocalizationProvider>\n    </ThemeProvider>\n  </StyledEngineProvider>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}